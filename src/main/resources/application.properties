# WebServer properties
server.port=8080
server.servlet.context-path=/nce
server.tomcat.max-connections=10000
server.tomcat.max-threads=200
server.tomcat.uri-encoding=UTF-8
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.compression.excluded-user-agents=
#server.http2.enabled=true

# Servlet filter related
spring.http.encoding.enabled=false
        
# Security
#security.basic.enabled=false
#endpoints.logfile.sensitive=false
#management.security.enabled=false
#security.user.name=admin
#security.user.password=secret
#management.security.role=SUPERUSER

# Logging related
logging.level.root=INFO
logging.level.com.cedarsoftware.ncube.util.GCacheManager=WARN

# Spring
spring.groovy.template.check-template-location=false
spring.jpa.open-in-view=false
management.endpoints.web.exposure.include=health,info,metrics

# n-cube client's target (n-cube running as a storage server, or in rare-cases, a chained runtime server).
ncube.target.scheme=http
ncube.target.host=localhost
ncube.target.port=9000
ncube.target.context=ncube
ncube.target.numConnections=200
ncube.target.username=example
ncube.target.password=changeit

# n-cube: Caching for runtime servers, once read, n-cubes are cached as they should never change during runtime.
ncube.cache.max.size=0
ncube.cache.evict.type=expireAfterAccess
ncube.cache.evict.duration=4
ncube.cache.evict.units=hours
ncube.cache.concurrency=16
ncube.cache.refresh.min=90

# n-cube: File cache for JSON n-cubes retrieved from storage server.  The policy sets what can be cached.
# Values for snapshotPolicy can be:
#  RELEASE_ONLY: prevent caching of snapshots; only cache release versions (default)
#  OFFLINE: only use cubes found in file cache; exceptions are thrown for missing cubes
#  UPDATE: snapshot cubes are only loaded if not found in the file cache; manual cleanup of cache required
#  FORCE: sha1 check is performed before loading cubes from file cache to ensure latest snapshot is used
ncube.cache.dir=
ncube.cache.snapshotPolicy=RELEASE_ONLY

# n-cube: Permissions cache configuration (how frequently it needs to re-read the real permissions n-cubes).
# Note: duration is short, because it only needs caching for subsequent-calls on the originating HTTP request.
ncube.perm.cache.evict.duration=60
ncube.perm.cache.evict.units=seconds
ncube.perm.cache.evict.type=expiresAfterAccess
ncube.perm.cache.max.size=100000
ncube.perm.cache.concurrency=16

# n-cube: Additional accepted domains to allow @Grapes and @Grab access (example value: org.apache.)
ncube.accepted.domains=

# n-cube: Ability to turn on/off tracking each cell binding in the output map.
ncube.track.bindings=true

# n-cube: Maximum length of string to show for each coordinate in n-cube's CommandCellException stack trace.
ncube.stackEntry.coordinate.value.max=1000

# n-cube: Cookies to 'pass through' to storage server. String with comma-delimited entries (no spaces).
ncube.proxy.cookiesToInclude='JSESSIONID'

# n-cube: File caches for compiled classes and Groovy sources.
ncube.sources.dir=
ncube.classes.dir=